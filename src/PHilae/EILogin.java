/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * EILogin.java
 *
 * Created on Feb 19, 2012, 3:48:23 PM
 */
package PHilae;

import APX.PHMain;
import javax.swing.JDialog;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author Pecherk
 */
public class EILogin extends javax.swing.JPanel
{
    private String module;
    private JDialog loginDialog;
    private static String loginId;
    private static String adminName;
    private TDClient tDClient = new TDClient();

    /**
     * Creates new form EILogin
     * @param tDClient
     */
    public EILogin(TDClient tDClient)
    {
        this.tDClient = tDClient;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
     * code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        userIdField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel1.setText("UserName");

        userIdField.setSelectionColor(java.awt.Color.red);
        ((AbstractDocument) userIdField.getDocument()).setDocumentFilter(new UppercaseDocumentFilter());
        userIdField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                userIdFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Password");

        passwordField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                passwordFieldActionPerformed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.setToolTipText("Login");
        loginButton.setFocusable(false);
        loginButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                loginButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setToolTipText("Cancel");
        cancelButton.setFocusable(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButtonActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userIdField, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(userIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loginButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(cancelButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loginButtonActionPerformed
    {//GEN-HEADEREND:event_loginButtonActionPerformed
        // TODO add your handling code here:
        loginUser();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        loginDialog.setVisible(false);
        passwordField.setText("");
        setAdminName(null);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void userIdFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_userIdFieldActionPerformed
    {//GEN-HEADEREND:event_userIdFieldActionPerformed
        // TODO add your handling code here:
        loginUser();
    }//GEN-LAST:event_userIdFieldActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_passwordFieldActionPerformed
    {//GEN-HEADEREND:event_passwordFieldActionPerformed
        // TODO add your handling code here:
        loginUser();
    }//GEN-LAST:event_passwordFieldActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField userIdField;
    // End of variables declaration//GEN-END:variables

    private String getUserID()
    {
        return userIdField.getText();
    }

    private String getPassword()
    {
        return String.valueOf(passwordField.getPassword());
    }

    private void showLoginDialog()
    {
        setAdminName(PHMain.phFrame == null ? "System" : null);
        if (loginDialog == null && PHMain.phFrame != null)
        {
            loginDialog = new JDialog(PHMain.phFrame, "Admin Login [ " + getModule() + " ]");
            loginDialog.setIconImage(PHMain.phFrame.getIconImage());

            loginDialog.setContentPane(this);
            loginDialog.pack();

            loginDialog.setLocationRelativeTo(this);
            loginDialog.setResizable(false);
            loginDialog.setModal(true);
        }
        if (PHMain.phFrame != null)
        {
            loginDialog.setTitle("Admin Login [ " + getModule() + " ]");
            loginDialog.setVisible(true);
        }
    }

    public boolean isUserAdmin(String module)
    {
        setModule(module);
        showLoginDialog();
        return getAdminName() != null;
    }

    private void loginUser()
    {
        if (passwordField.getPassword().length == 0)
        {
            passwordField.requestFocus();
        }
        else if (userIdField.getText().length() == 0)
        {
            userIdField.requestFocus();
        }
        else
        {
            userIdField.setEnabled(false);
            passwordField.setEnabled(false);

            setLoginId(getUserID());
            setAdminName(gettDClient().loginAdminUser(getUserID(), getPassword()));

            if (PHMain.posBridgeLog != null)
            {
                PHMain.posBridgeLog.info(getAdminName() == null ? "Login failed. User [ " + getUserID() + " ], Module [ " + getModule() + " ]" : "Login successful. User [ " + getUserID() + " ], Name [ " + getAdminName() + " ], Module [ " + getModule() + " ]");
            }

            userIdField.setEnabled(true);
            passwordField.setEnabled(true);

            if (getAdminName() != null)
            {
                loginDialog.setVisible(false);
                passwordField.setText("");
            }
            else
            {
                userIdField.setText("Login Failed...");
                passwordField.setText("");

                userIdField.requestFocus();
                userIdField.selectAll();
            }
        }
    }

    /**
     * @return the tDClient
     */
    public TDClient gettDClient()
    {
        return tDClient;
    }

    /**
     * @param tDClient the tDClient to set
     */
    public void settDClient(TDClient tDClient)
    {
        this.tDClient = tDClient;
    }

    class UppercaseDocumentFilter extends DocumentFilter
    {
        @Override
        public void insertString(DocumentFilter.FilterBypass fb, int offset, String text,
            AttributeSet attr) throws BadLocationException
        {

            fb.insertString(offset, text.toUpperCase(), attr);
        }

        @Override
        public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text,
            AttributeSet attrs) throws BadLocationException
        {

            fb.replace(offset, length, text.toUpperCase(), attrs);
        }
    }

    /**
     * @return the loginId
     */
    public static String getLoginId()
    {
        return loginId;
    }

    /**
     * @param aLoginId the loginId to set
     */
    public static void setLoginId(String aLoginId)
    {
        loginId = aLoginId;
    }

    /**
     * @return the adminName
     */
    public static String getAdminName()
    {
        return adminName;
    }

    /**
     * @param aAdminName the adminName to set
     */
    public static void setAdminName(String aAdminName)
    {
        adminName = aAdminName;
    }

    /**
     * @return the module
     */
    public String getModule()
    {
        return module;
    }

    /**
     * @param module the module to set
     */
    public void setModule(String module)
    {
        this.module = module;
    }
}
