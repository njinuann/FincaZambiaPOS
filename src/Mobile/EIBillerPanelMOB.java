/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TMPanelMOB.java
 *
 * Created on Feb 22, 2012, 12:21:01 AM
 */
package Mobile;

import APX.PHController;
import APX.PHMain;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author Pecherk
 */
public class EIBillerPanelMOB extends javax.swing.JPanel
{

    private JDialog BillerCodeDialog = null;
    private final TDClientMOB tDClient = new TDClientMOB();
    private EIBillerCode eIBillerCode = new EIBillerCode();

    /**
     * Creates new form EITerminalMOB
     */
    public EIBillerPanelMOB()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        descriptionField = new javax.swing.JTextField();
        valueLabel = new javax.swing.JLabel();
        codeField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        statusBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        modifiedByField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dateModifiedField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        moduleBox = new javax.swing.JComboBox();
        buBox = new javax.swing.JComboBox();
        currenciesPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        acctNameField = new javax.swing.JTextField();
        acctNoField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        currencyBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        narrativeCodeField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        assocProcField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        cancelButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        saveButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        findBox = new javax.swing.JComboBox();
        findField = new javax.swing.JTextField();
        findButton = new javax.swing.JButton();
        terminalsScroller = new javax.swing.JScrollPane();
        billerCodeTree = new javax.swing.JTree();
        jSeparator3 = new javax.swing.JSeparator();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray));

        jLabel1.setText("Description");

        valueLabel.setText("Branch Number");

        codeField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                codeFieldFocusLost(evt);
            }
        });

        jLabel7.setText("Status          ");

        statusBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Closed" }));

        jLabel8.setText("Last Modified By");

        modifiedByField.setEditable(false);
        modifiedByField.setForeground(new java.awt.Color(51, 102, 255));

        jLabel10.setText("Biller Code");

        jLabel11.setText("Date Modified");

        dateModifiedField.setEditable(false);
        dateModifiedField.setForeground(new java.awt.Color(51, 102, 255));

        jLabel2.setText("Module");

        moduleBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select --", "MOB", "POS" }));

        buBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pick Creation Branch" }));

        currenciesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray), "Biller Accounts"));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray));

        acctNameField.setEditable(false);

        acctNoField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                acctNoFieldFocusLost(evt);
            }
        });

        jLabel3.setText("Account Number");

        jLabel4.setText("Account Name");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acctNoField, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(acctNameField))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acctNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(acctNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setText("Currency");

        currencyBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ZMW", "USD" }));
        currencyBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                currencyBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("Narration Code");

        narrativeCodeField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                narrativeCodeFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout currenciesPanelLayout = new javax.swing.GroupLayout(currenciesPanel);
        currenciesPanel.setLayout(currenciesPanelLayout);
        currenciesPanelLayout.setHorizontalGroup(
            currenciesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currenciesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(currenciesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(currenciesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currencyBox, 0, 161, Short.MAX_VALUE))
                    .addGroup(currenciesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(1, 1, 1)
                        .addComponent(narrativeCodeField)))
                .addContainerGap())
        );
        currenciesPanelLayout.setVerticalGroup(
            currenciesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currenciesPanelLayout.createSequentialGroup()
                .addGroup(currenciesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(currenciesPanelLayout.createSequentialGroup()
                        .addGroup(currenciesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(currencyBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(currenciesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(narrativeCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jLabel12.setText("Assoc. Proc Code");

        assocProcField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                assocProcFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currenciesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modifiedByField))
                            .addComponent(dateModifiedField)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(valueLabel)
                            .addComponent(jLabel10))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(codeField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(moduleBox, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(assocProcField))
                            .addComponent(descriptionField)
                            .addComponent(buBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(codeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(moduleBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(assocProcField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valueLabel)
                    .addComponent(buBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(modifiedByField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(dateModifiedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currenciesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cancelButton.setText("Close");
        cancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButtonActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(java.awt.Color.white);

        jLabel9.setText("Find By");

        findBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Biller Code" }));
        findBox.setFocusable(false);

        findField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                findFieldActionPerformed(evt);
            }
        });

        findButton.setBackground(java.awt.Color.white);
        findButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/find.png"))); // NOI18N
        findButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                findButtonActionPerformed(evt);
            }
        });

        terminalsScroller.setBorder(null);

        billerCodeTree.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 5, 5));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Custom Biller Codes");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Add Biller Code");
        treeNode1.add(treeNode2);
        billerCodeTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        billerCodeTree.setCellRenderer(new Mobile.TRendererMOB());
        billerCodeTree.setRootVisible(false);
        billerCodeTree.setShowsRootHandles(true);
        billerCodeTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener()
        {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt)
            {
                billerCodeTreeValueChanged(evt);
            }
        });
        terminalsScroller.setViewportView(billerCodeTree);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
            .addComponent(jSeparator3)
            .addComponent(terminalsScroller)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(findBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(terminalsScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addComponent(cancelButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void billerCodeTreeValueChanged(javax.swing.event.TreeSelectionEvent evt)//GEN-FIRST:event_billerCodeTreeValueChanged
    {//GEN-HEADEREND:event_billerCodeTreeValueChanged
        // TODO add your handling code here:
        displayBillerCode();
}//GEN-LAST:event_billerCodeTreeValueChanged

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        hideBillerCodeDialog();
}//GEN-LAST:event_cancelButtonActionPerformed

    private void displayBillerCode()
    {
        DefaultMutableTreeNode selectedBillerCodeNode = (DefaultMutableTreeNode) billerCodeTree.getLastSelectedPathComponent();
        if (selectedBillerCodeNode != null)
        {
            Object selectedNode = selectedBillerCodeNode.getUserObject();
            if ("Add Biller Code".equals(selectedNode))
            {
                eIBillerCode = new EIBillerCode();
                codeField.setEditable(true);
                buBox.setEnabled(true);
                codeField.setText("");
                descriptionField.setText("");
                moduleBox.setSelectedIndex(0);
                buBox.setSelectedIndex(0);
                statusBox.setSelectedIndex(0);
                modifiedByField.setText("");
                dateModifiedField.setText("");
                currencyBox.setSelectedIndex(0);
                acctNoField.setText("");
                acctNameField.setText("");
                assocProcField.setText("");
                narrativeCodeField.setText("");
                saveButton.setEnabled(true);
                saveButton.setText("Save");

            }
            else if (selectedNode instanceof EIBillerCode)
            {
                eIBillerCode = (EIBillerCode) selectedNode;
                codeField.setEditable(false);
                buBox.setEnabled(true);
                codeField.setText(eIBillerCode.getBillerCode());
                descriptionField.setText(eIBillerCode.getBillerDesc());
                moduleBox.setSelectedItem(eIBillerCode.getModule());
                buBox.setSelectedItem(eIBillerCode.getBuCode() + " ~ " + eIBillerCode.getBuName());
                statusBox.setSelectedItem(eIBillerCode.getRecStatus());
                modifiedByField.setText(eIBillerCode.getModifiedBy());
                currencyBox.setSelectedItem(eIBillerCode.getCurrency());
                acctNoField.setText(eIBillerCode.getAssocAcctNo());
                acctNameField.setText(eIBillerCode.getAssocAcctNm());
                assocProcField.setText(eIBillerCode.getAssocProcCode());
                narrativeCodeField.setText(eIBillerCode.getNtvCodeField());
                dateModifiedField.setText(new SimpleDateFormat("EEE, d MMM yyyy HH:mm:ss a").format(eIBillerCode.getDateModified()));
                saveButton.setText("Update");
                saveButton.setEnabled(true);
            }
        }
    }

    public void showBillerCodeDialog()
    {
        loadBusinessUnits();
        setBillerCodeTree();
        billerCodeTree.setSelectionRow(0);

        if (BillerCodeDialog == null)
        {
            BillerCodeDialog = new JDialog(PHMain.phFrame, PHController.MobModule + " Biller Codes");
            BillerCodeDialog.setContentPane(this);
            BillerCodeDialog.pack();
            BillerCodeDialog.setResizable(false);
        }

        BillerCodeDialog.setIconImage(PHMain.phFrame.getIconImage());
        BillerCodeDialog.setLocationRelativeTo(PHMain.phFrame);
        BillerCodeDialog.setVisible(true);
    }

    public void hideBillerCodeDialog()
    {
        BillerCodeDialog.setVisible(false);
        tDClient.dispose();
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveButtonActionPerformed
    {//GEN-HEADEREND:event_saveButtonActionPerformed
        // TODO add your handling code here:
        buBox.setSelectedIndex(1);
        if (codeField.getText().trim().length() == 0)
        {
            JOptionPane.showMessageDialog(null, "Biller Code required.");
        }
        else if (descriptionField.getText().trim().length() == 0)
        {
            JOptionPane.showMessageDialog(null, "Description required.");
        }
        else if (buBox.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(null, "Associated branch required.");
        }
        else if (moduleBox.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(null, "Module required.");
        }
        else if (narrativeCodeField.getText().trim().length() == 0)
        {
            JOptionPane.showMessageDialog(null, "Narative Code required.");
        }
        else if (acctNoField.getText().trim().length() == 0)
        {
            JOptionPane.showMessageDialog(null, "Account Number required.");
        }
        else if (assocProcField.getText().trim().length() == 0)
        {
            JOptionPane.showMessageDialog(null, "Assoc. Proc Code required.");
        }
        else
        {
            eIBillerCode.setBillerCode(codeField.getText().trim());
            eIBillerCode.setCurrency(currencyBox.getSelectedItem().toString());
            eIBillerCode.setBillerDesc(descriptionField.getText().trim().replaceAll("'", "''"));

            eIBillerCode.setModule(moduleBox.getSelectedItem().toString());
            eIBillerCode.setBuCode(buBox.getSelectedItem().toString().split("~")[0].trim());

            eIBillerCode.setBuName(buBox.getSelectedItem().toString().split("~")[1].trim());
            eIBillerCode.setRecStatus(statusBox.getSelectedItem().toString());

            eIBillerCode.setModifiedBy(EILoginMOB.getAdminName());
            eIBillerCode.setDateModified(new Date());

            eIBillerCode.setAssocAcctNo(acctNoField.getText().trim());
            eIBillerCode.setAssocAcctNm(acctNameField.getText().trim());

            eIBillerCode.setAssocProcCode(assocProcField.getText().trim());
            eIBillerCode.setNtvCodeField(narrativeCodeField.getText().trim());

            if (tDClient.upsertBillerCode(eIBillerCode))
            {
                showBillerCode(eIBillerCode.getBillerCode());
                JOptionPane.showMessageDialog(PHMain.phFrame, "Biller code saved successfully.");
            }
            else
            {
                JOptionPane.showMessageDialog(PHMain.phFrame, "Failed to save Biller code. Please refer to log for more details.", "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
}//GEN-LAST:event_saveButtonActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_findButtonActionPerformed
    {//GEN-HEADEREND:event_findButtonActionPerformed
        // TODO add your handling code here:
        searchBillerCode();
    }//GEN-LAST:event_findButtonActionPerformed

    private void findFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_findFieldActionPerformed
    {//GEN-HEADEREND:event_findFieldActionPerformed
        // TODO add your handling code here:
        findButton.doClick();
    }//GEN-LAST:event_findFieldActionPerformed

    private void codeFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_codeFieldFocusLost
    {//GEN-HEADEREND:event_codeFieldFocusLost
        // TODO add your handling code here:
        if (codeField.getText().trim().length() > 0)
        {
            verifyBiller();
        }
    }//GEN-LAST:event_codeFieldFocusLost

    private void acctNoFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_acctNoFieldFocusLost
    {//GEN-HEADEREND:event_acctNoFieldFocusLost
        // TODO add your handling code here:
        if (acctNoField.getText().trim().length() > 0)
        {
            verifyAccount();
        }
    }//GEN-LAST:event_acctNoFieldFocusLost

    private void currencyBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_currencyBoxActionPerformed
    {//GEN-HEADEREND:event_currencyBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currencyBoxActionPerformed

    private void assocProcFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_assocProcFieldFocusLost
    {//GEN-HEADEREND:event_assocProcFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_assocProcFieldFocusLost

    private void narrativeCodeFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_narrativeCodeFieldFocusLost
    {//GEN-HEADEREND:event_narrativeCodeFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_narrativeCodeFieldFocusLost

    private void verifyAccount()
    {
        acctNameField.setText("");
        if (!"".equals(acctNoField.getText().trim()))
        {

            CNAccountMOB cNAccount = tDClient.queryGLAccount(acctNoField.getText().trim());

            if (cNAccount.getAccountNumber() == null)
            {
                JOptionPane.showMessageDialog(this, "Invalid or InActive Biller account!");
            }
            else
            {
                acctNameField.setText(tDClient.capitalize(cNAccount.getAccountName()));
                acctNoField.setText(cNAccount.getAccountNumber());

            }
        }
    }

//    public String getSelectedCurrency()
//    {
//        DefaultMutableTreeNode currencyNode = (DefaultMutableTreeNode) currencyTree.getLastSelectedPathComponent();
//        return currencyNode != null ? currencyNode.getUserObject().toString().split("~")[0].trim() : PHController.PrimaryCurrencyCode;
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField acctNameField;
    private javax.swing.JTextField acctNoField;
    private javax.swing.JTextField assocProcField;
    private javax.swing.JTree billerCodeTree;
    private javax.swing.JComboBox buBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField codeField;
    private javax.swing.JPanel currenciesPanel;
    private javax.swing.JComboBox currencyBox;
    private javax.swing.JTextField dateModifiedField;
    private javax.swing.JTextField descriptionField;
    private javax.swing.JComboBox findBox;
    private javax.swing.JButton findButton;
    private javax.swing.JTextField findField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField modifiedByField;
    private javax.swing.JComboBox moduleBox;
    private javax.swing.JTextField narrativeCodeField;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox statusBox;
    private javax.swing.JScrollPane terminalsScroller;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

    private void verifyBiller()
    {
        String billerCode = codeField.getText().trim();
        if (PHController.getMobBillerCode().containsKey(billerCode))
        {
            findField.setText(billerCode);
            findBox.setSelectedIndex(0);
            searchBillerCode();
        }
    }

    private void loadBusinessUnits()
    {
        buBox.removeAllItems();
        buBox.addItem("Pick Branch Associated With This Terminal");
        tDClient.queryBusinessUnits().stream().forEach((branch)
                ->
                {
                    buBox.addItem(branch.getBuCode() + " ~ " + branch.getBuName());
                });
    }

    public void searchBillerCode()
    {
        DefaultMutableTreeNode rootNode = ((DefaultMutableTreeNode) billerCodeTree.getModel().getRoot());
        DefaultMutableTreeNode newTerminal = new DefaultMutableTreeNode("Add Biller Code");

        rootNode.removeAllChildren();
        rootNode.add(newTerminal);

        boolean isBillerCodeFound = false;
        for (EIBillerCode billerCode : PHController.getMobBillerCode().values())
        {
            if (findBox.getSelectedIndex() == 0 ? billerCode.getBillerCode().endsWith(findField.getText().trim()) : billerCode.getBuCode().endsWith(findField.getText().trim()))
            {
                DefaultMutableTreeNode node = new DefaultMutableTreeNode(billerCode);
                rootNode.add(node);

                if (!isBillerCodeFound)
                {
                    billerCodeTree.setSelectionPath(new TreePath(node.getPath()));
                    isBillerCodeFound = true;
                }
            }
        }

        terminalsScroller.getHorizontalScrollBar().setValue(0);
        terminalsScroller.getVerticalScrollBar().setValue(0);
        billerCodeTree.updateUI();
    }

    public void setBillerCodeTree()
    {
        PHController.loadMobBillerCodes();
        DefaultMutableTreeNode billerCodeRootNode = ((DefaultMutableTreeNode) billerCodeTree.getModel().getRoot());
        DefaultMutableTreeNode newBillerCode = new DefaultMutableTreeNode("Add Biller Code");

        billerCodeRootNode.removeAllChildren();
        billerCodeRootNode.add(newBillerCode);

//        for (EIProCodesMOB procCode : PHController.getProcessingCode().values())
//        {
//            DefaultMutableTreeNode node = new DefaultMutableTreeNode(procCode.getProcCode()+"~"+procCode.getProcDesc());
//            procCodeRootNode.add(node);
//        }
        PHController.getMobBillerCode().values().stream().map((billerCode) -> new DefaultMutableTreeNode(billerCode)).forEach((node)
                ->
                {
                    System.err.println("the biller code loaded "+PHController.getMobBillerCode().values());
                    billerCodeRootNode.add(node);
                });
        terminalsScroller.getHorizontalScrollBar().setValue(0);
        terminalsScroller.getVerticalScrollBar().setValue(0);
        billerCodeTree.updateUI();
    }

    private void showBillerCode(String ID)
    {
        findField.setText("");
        setBillerCodeTree();

        DefaultMutableTreeNode rootNode = ((DefaultMutableTreeNode) billerCodeTree.getModel().getRoot());
        DefaultMutableTreeNode child = rootNode.getFirstLeaf();
        while (child != null)
        {
            if (child.getUserObject() instanceof EIBillerCode)
            {
                if (((EIBillerCode) child.getUserObject()).getBillerCode().equalsIgnoreCase(ID))
                {
                    billerCodeTree.setSelectionPath(new TreePath(child.getPath()));
                    billerCodeTree.updateUI();
                    return;
                }
            }
            child = child.getNextSibling();
        }
    }

}
