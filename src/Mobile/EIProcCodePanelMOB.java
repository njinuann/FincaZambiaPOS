/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TMPanelMOB.java
 *
 * Created on Feb 22, 2012, 12:21:01 AM
 */
package Mobile;

import APX.PHController;
import APX.PHMain;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author Pecherk
 */
public class EIProcCodePanelMOB extends javax.swing.JPanel
{

    private JDialog procCodeDialog = null;
    private final TDClientMOB tDClient = new TDClientMOB();
    private EIProCodesMOB eIProcCode = new EIProCodesMOB();

    /**
     * Creates new form EITerminalMOB
     */
    public EIProcCodePanelMOB()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        descriptionField = new javax.swing.JTextField();
        valueLabel = new javax.swing.JLabel();
        codeField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        statusBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        modifiedByField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dateModifiedField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        moduleBox = new javax.swing.JComboBox();
        buBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        procTypeBox = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        cancelButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        saveButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        findBox = new javax.swing.JComboBox();
        findField = new javax.swing.JTextField();
        findButton = new javax.swing.JButton();
        terminalsScroller = new javax.swing.JScrollPane();
        procCodeTree = new javax.swing.JTree();
        jSeparator3 = new javax.swing.JSeparator();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray));

        jLabel1.setText("Description");

        valueLabel.setText("Branch Number");

        codeField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                codeFieldFocusLost(evt);
            }
        });

        jLabel7.setText("Status          ");

        statusBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Closed" }));

        jLabel8.setText("Last Modified By");

        modifiedByField.setEditable(false);
        modifiedByField.setForeground(new java.awt.Color(51, 102, 255));

        jLabel10.setText("Proc Code");

        jLabel11.setText("Date Modified");

        dateModifiedField.setEditable(false);
        dateModifiedField.setForeground(new java.awt.Color(51, 102, 255));

        jLabel2.setText("Module");

        moduleBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "MOB", "POS" }));

        buBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pick Creation Branch" }));

        jLabel5.setText("Proc Type");

        procTypeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "DR", "CR", "TFR" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(42, 42, 42)
                        .addComponent(codeField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5)
                        .addGap(3, 3, 3)
                        .addComponent(procTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(moduleBox, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(valueLabel))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descriptionField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modifiedByField))
                            .addComponent(dateModifiedField))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(codeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(procTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(moduleBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valueLabel)
                    .addComponent(buBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(modifiedByField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(dateModifiedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        cancelButton.setText("Close");
        cancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButtonActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(java.awt.Color.white);

        jLabel9.setText("Find By");

        findBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Proc Code" }));
        findBox.setFocusable(false);

        findField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                findFieldActionPerformed(evt);
            }
        });

        findButton.setBackground(java.awt.Color.white);
        findButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/find.png"))); // NOI18N
        findButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                findButtonActionPerformed(evt);
            }
        });

        terminalsScroller.setBorder(null);
        terminalsScroller.setBorder(null);

        procCodeTree.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 5, 5));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Custom Processing Codes");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Add Processing Code");
        treeNode1.add(treeNode2);
        procCodeTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        procCodeTree.setCellRenderer(new Mobile.TRendererMOB());
        procCodeTree.setRootVisible(false);
        procCodeTree.setShowsRootHandles(true);
        procCodeTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener()
        {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt)
            {
                procCodeTreeValueChanged(evt);
            }
        });
        terminalsScroller.setViewportView(procCodeTree);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator3)
            .addComponent(terminalsScroller)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(findBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(terminalsScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addComponent(cancelButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void procCodeTreeValueChanged(javax.swing.event.TreeSelectionEvent evt)//GEN-FIRST:event_procCodeTreeValueChanged
    {//GEN-HEADEREND:event_procCodeTreeValueChanged
        // TODO add your handling code here:
        displayProcCode();
}//GEN-LAST:event_procCodeTreeValueChanged

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        hideProcCodeDialog();
}//GEN-LAST:event_cancelButtonActionPerformed

    private void displayProcCode()
    {
        DefaultMutableTreeNode selectedProcCodeNode = (DefaultMutableTreeNode) procCodeTree.getLastSelectedPathComponent();
        if (selectedProcCodeNode != null)
        {
            Object selectedNode = selectedProcCodeNode.getUserObject();
            if ("Add Processing Code".equals(selectedNode))
            {
                eIProcCode = new EIProCodesMOB();
                codeField.setEditable(true);
                buBox.setEnabled(true);
                codeField.setText("");
                descriptionField.setText("");
                moduleBox.setSelectedIndex(0);
                buBox.setSelectedIndex(0);
                statusBox.setSelectedIndex(0);
                modifiedByField.setText("");
                dateModifiedField.setText("");
                saveButton.setEnabled(true);
                saveButton.setText("Save");

            }
            else if (selectedNode instanceof EIProCodesMOB)
            {
                eIProcCode = (EIProCodesMOB) selectedNode;
                codeField.setEditable(false);
                buBox.setEnabled(true);
                codeField.setText(eIProcCode.getProcCode());
                descriptionField.setText(eIProcCode.getProcDesc());
                moduleBox.setSelectedItem(eIProcCode.getModule());
                buBox.setSelectedItem(eIProcCode.getBuCode() + " ~ " + eIProcCode.getBuName());
                statusBox.setSelectedItem(eIProcCode.getRecStatus());
                modifiedByField.setText(eIProcCode.getModifiedBy());
                dateModifiedField.setText(new SimpleDateFormat("EEE, d MMM yyyy HH:mm:ss a").format(eIProcCode.getDateModified()));
                saveButton.setText("Update");
                saveButton.setEnabled(true);
            }
        }
    }

    public void showProcCodeDialog()
    {
        loadBusinessUnits();
        setProcCodeTree();
        procCodeTree.setSelectionRow(0);

        if (procCodeDialog == null)
        {
            procCodeDialog = new JDialog(PHMain.phFrame, PHController.MobModule + " Processing Codes");
            procCodeDialog.setContentPane(this);
            procCodeDialog.pack();
            procCodeDialog.setResizable(false);
        }

        procCodeDialog.setIconImage(PHMain.phFrame.getIconImage());
        procCodeDialog.setLocationRelativeTo(PHMain.phFrame);
        procCodeDialog.setVisible(true);
    }

    public void hideProcCodeDialog()
    {
        procCodeDialog.setVisible(false);
        tDClient.dispose();
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveButtonActionPerformed
    {//GEN-HEADEREND:event_saveButtonActionPerformed
        // TODO add your handling code here:
        buBox.setSelectedIndex(1);
        if (codeField.getText().trim().length() == 0)
        {
            JOptionPane.showMessageDialog(null, "Processing Code required.");
        }
        else if (descriptionField.getText().trim().length() == 0)
        {
            JOptionPane.showMessageDialog(null, "Description required.");
        }
        else if (buBox.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(null, "Associated branch required.");
        } else if (procTypeBox.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(null, "Processing Code Type required.");
        }
        else
        {
            eIProcCode.setProcCode(codeField.getText().trim());
            eIProcCode.setProcType(procTypeBox.getSelectedItem().toString());
            eIProcCode.setProcDesc(descriptionField.getText().trim().replaceAll("'", "''"));

            eIProcCode.setModule(moduleBox.getSelectedItem().toString());
            eIProcCode.setBuCode(buBox.getSelectedItem().toString().split("~")[0].trim());

            eIProcCode.setBuName(buBox.getSelectedItem().toString().split("~")[1].trim());
            eIProcCode.setRecStatus(statusBox.getSelectedItem().toString());

            eIProcCode.setModifiedBy(EILoginMOB.getAdminName());
            eIProcCode.setDateModified(new Date());

            if (tDClient.upsertProcCode(eIProcCode))
            {               
                showProcCode(eIProcCode.getProcCode());
                JOptionPane.showMessageDialog(PHMain.phFrame, "Proc. code saved successfully.");
            }
            else
            {
                JOptionPane.showMessageDialog(PHMain.phFrame, "Failed to save Proc. code. Please refer to log for more details.", "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
}//GEN-LAST:event_saveButtonActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_findButtonActionPerformed
    {//GEN-HEADEREND:event_findButtonActionPerformed
        // TODO add your handling code here:
        searchProcCode();
    }//GEN-LAST:event_findButtonActionPerformed

    private void findFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_findFieldActionPerformed
    {//GEN-HEADEREND:event_findFieldActionPerformed
        // TODO add your handling code here:
        findButton.doClick();
    }//GEN-LAST:event_findFieldActionPerformed

    private void codeFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_codeFieldFocusLost
    {//GEN-HEADEREND:event_codeFieldFocusLost
        // TODO add your handling code here:
        if (codeField.getText().trim().length() > 0)
        {
            verifyTerminal();
        }
    }//GEN-LAST:event_codeFieldFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox buBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField codeField;
    private javax.swing.JTextField dateModifiedField;
    private javax.swing.JTextField descriptionField;
    private javax.swing.JComboBox findBox;
    private javax.swing.JButton findButton;
    private javax.swing.JTextField findField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField modifiedByField;
    private javax.swing.JComboBox moduleBox;
    private javax.swing.JTree procCodeTree;
    private javax.swing.JComboBox procTypeBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox statusBox;
    private javax.swing.JScrollPane terminalsScroller;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

    private void verifyTerminal()
    {
        String procCode = codeField.getText().trim();
        if (PHController.getMobProcessingCode().containsKey(procCode))
        {
            findField.setText(procCode);
            findBox.setSelectedIndex(0);
            searchProcCode();
        }
    }

    private void loadBusinessUnits()
    {
        buBox.removeAllItems();
        buBox.addItem("Pick Branch Associated With This Terminal");
        tDClient.queryBusinessUnits().stream().forEach((branch)
                ->
                {
                    buBox.addItem(branch.getBuCode() + " ~ " + branch.getBuName());
                });
    }

    public void searchProcCode()
    {
        DefaultMutableTreeNode rootNode = ((DefaultMutableTreeNode) procCodeTree.getModel().getRoot());
        DefaultMutableTreeNode newTerminal = new DefaultMutableTreeNode("Add Processing Code");

        rootNode.removeAllChildren();
        rootNode.add(newTerminal);

        boolean isproCodeFound = false;
        for (EIProCodesMOB procCode : PHController.getMobProcessingCode().values())
        {
            if (findBox.getSelectedIndex() == 0 ? procCode.getProcCode().endsWith(findField.getText().trim()) : procCode.getBuCode().endsWith(findField.getText().trim()))
            {
                DefaultMutableTreeNode node = new DefaultMutableTreeNode(procCode);
                rootNode.add(node);

                if (!isproCodeFound)
                {
                    procCodeTree.setSelectionPath(new TreePath(node.getPath()));
                    isproCodeFound = true;
                }
            }
        }

        terminalsScroller.getHorizontalScrollBar().setValue(0);
        terminalsScroller.getVerticalScrollBar().setValue(0);
        procCodeTree.updateUI();
    }

    public void setProcCodeTree()
    {
        PHController.loadMobProcessingCodes();
        DefaultMutableTreeNode procCodeRootNode = ((DefaultMutableTreeNode) procCodeTree.getModel().getRoot());
        DefaultMutableTreeNode newprocCode = new DefaultMutableTreeNode("Add Processing Code");

        procCodeRootNode.removeAllChildren();
        procCodeRootNode.add(newprocCode);

//        for (EIProCodesMOB procCode : PHController.getProcessingCode().values())
//        {
//            DefaultMutableTreeNode node = new DefaultMutableTreeNode(procCode.getProcCode()+"~"+procCode.getProcDesc());
//            procCodeRootNode.add(node);
//        }

        PHController.getMobProcessingCode().values().stream().map((procCode) -> new DefaultMutableTreeNode(procCode)).forEach((node)
                ->
                {
                    procCodeRootNode.add(node);
                });
        terminalsScroller.getHorizontalScrollBar().setValue(0);
        terminalsScroller.getVerticalScrollBar().setValue(0);
        procCodeTree.updateUI();
    }

    private void showProcCode(String ID)
    {
        findField.setText("");
        setProcCodeTree();

        DefaultMutableTreeNode rootNode = ((DefaultMutableTreeNode) procCodeTree.getModel().getRoot());
        DefaultMutableTreeNode child = rootNode.getFirstLeaf();
        while (child != null)
        {
            if (child.getUserObject() instanceof EIProCodesMOB)
            {
                if (((EIProCodesMOB) child.getUserObject()).getProcCode().equalsIgnoreCase(ID))
                {
                    procCodeTree.setSelectionPath(new TreePath(child.getPath()));
                    procCodeTree.updateUI();
                    return;
                }
            }
            child = child.getNextSibling();
        }
    }

}
